[2020-06-19 00:15:23:429] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 14700 (C:\Dev\springDev\portfolio\target\classes started by admin in C:\Dev\springDev\portfolio)
[2020-06-19 00:15:23:434] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:15:27:4553] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 4.39 seconds (JVM running for 5.145)
[2020-06-19 00:15:38:15966] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 00:15:38:16035] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493339139), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (3ms)]
[2020-06-19 00:15:55:32656] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356621), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 00:15:55:32678] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356792), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (22ms)]
[2020-06-19 00:15:55:32679] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356413), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (27ms)]
[2020-06-19 00:15:55:32688] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356254), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (30ms)]
[2020-06-19 00:15:55:32691] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356293), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (1ms)]
[2020-06-19 00:15:55:32692] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356889), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (38ms)]
[2020-06-19 00:15:55:32708] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356313), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (3ms)]
[2020-06-19 00:15:55:32712] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493357045), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (7ms)]
[2020-06-19 00:15:55:32723] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493357054), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:15:55:32739] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356254), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:15:55:32767] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356272), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (2ms)]
[2020-06-19 00:15:55:32791] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493357229), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (2ms)]
[2020-06-19 00:15:55:32809] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356951), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:15:55:32892] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356778), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getCountLike), 요청주소 : (/api/countlike/7), 실행시간 : (6ms)]
[2020-06-19 00:15:55:32915] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493356312), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikeByUser), 요청주소 : (/api/loadlike/7/test), 실행시간 : (1ms)]
[2020-06-19 00:15:58:36130] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493360178), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutById), 요청주소 : (/api/aboutid/10), 실행시간 : (5ms)]
[2020-06-19 00:16:23:60705] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592493384553), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (updateAboutImageById), 요청주소 : (/api/aboutimage/10), HTTP요청메소드 : (PUT), text : (이한성의 포트폴리오 입니다.d), favorite : (#spring #react #webd)]
[2020-06-19 00:16:23:60757] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592493384553), 실행시간 : (52ms)]
[2020-06-19 00:16:23:60771] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493384446), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutById), 요청주소 : (/api/aboutid/10), 실행시간 : (2ms)]
[2020-06-19 00:16:29:66805] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592493391150), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (updateAboutById), 요청주소 : (/api/about/10), HTTP요청메소드 : (PUT)]
[2020-06-19 00:16:29:66809] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592493391150), 실행시간 : (4ms)]
[2020-06-19 00:16:29:66819] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493390089), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutById), 요청주소 : (/api/aboutid/10), 실행시간 : (2ms)]
[2020-06-19 00:16:46:83486] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592493407222), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (updateAboutImageById), 요청주소 : (/api/aboutimage/10), HTTP요청메소드 : (PUT), text : (이한성의 포트폴리오 입니다.d), favorite : (#spring #react #webd)]
[2020-06-19 00:16:46:83498] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592493407222), 실행시간 : (12ms)]
[2020-06-19 00:16:46:83510] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493407669), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutById), 요청주소 : (/api/aboutid/10), 실행시간 : (2ms)]
[2020-06-19 00:16:55:92205] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592493415023), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (updateAboutImageById), 요청주소 : (/api/aboutimage/10), HTTP요청메소드 : (PUT), text : (이한성의 포트폴리오 입니다.d), favorite : (#spring #react #webd)]
[2020-06-19 00:16:55:92219] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592493415023), 실행시간 : (14ms)]
[2020-06-19 00:16:55:92230] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592493415833), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutById), 요청주소 : (/api/aboutid/10), 실행시간 : (2ms)]
[2020-06-19 00:17:20:117460] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 14700 (C:\Dev\springDev\portfolio\target\classes started by admin in C:\Dev\springDev\portfolio)
[2020-06-19 00:17:20:117460] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:17:21:119045] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.619 seconds (JVM running for 119.637)
[2020-06-19 00:23:09:423] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:23:09:424] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:23:13:4528] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 4.365 seconds (JVM running for 5.038)
[2020-06-19 00:23:25:16416] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:23:25:16417] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:23:27:18048] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.666 seconds (JVM running for 18.559)
[2020-06-19 00:23:56:47433] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:23:56:47433] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:23:58:48975] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.578 seconds (JVM running for 49.485)
[2020-06-19 00:24:59:110236] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:24:59:110236] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:25:00:111741] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.536 seconds (JVM running for 112.252)
[2020-06-19 00:26:39:209906] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:26:39:209907] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:26:40:211397] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.521 seconds (JVM running for 211.907)
[2020-06-19 00:27:15:245891] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:27:15:245891] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:27:16:247379] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.518 seconds (JVM running for 247.89)
[2020-06-19 00:27:26:257246] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:27:26:257247] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:27:28:258777] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.559 seconds (JVM running for 259.287)
[2020-06-19 00:27:34:265528] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:27:34:265528] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:27:36:266996] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.499 seconds (JVM running for 267.507)
[2020-06-19 00:27:38:269641] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:27:38:269641] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:27:40:271144] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.529 seconds (JVM running for 271.654)
[2020-06-19 00:27:52:283026] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:27:52:283027] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:27:53:284502] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.502 seconds (JVM running for 285.012)
[2020-06-19 00:28:00:291249] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:28:00:291249] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:28:01:292696] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.474 seconds (JVM running for 293.207)
[2020-06-19 00:28:15:306629] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:28:15:306629] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:28:17:308222] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.619 seconds (JVM running for 308.732)
[2020-06-19 00:28:28:319102] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:28:28:319102] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:28:29:320619] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.548 seconds (JVM running for 321.13)
[2020-06-19 00:28:39:330442] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:28:39:330443] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:28:41:331889] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.473 seconds (JVM running for 332.4)
[2020-06-19 00:29:27:378714] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:29:27:378714] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:29:29:380153] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.467 seconds (JVM running for 380.664)
[2020-06-19 00:29:56:407028] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494197179), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/15), 실행시간 : (15ms)]
[2020-06-19 00:29:56:407073] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494197305), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/15), 실행시간 : (2ms)]
[2020-06-19 00:29:56:407085] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494198225), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/15), 실행시간 : (3ms)]
[2020-06-19 00:30:02:413473] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494203551), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (updatePortfolioById), 요청주소 : (/api/portfolio/15), HTTP요청메소드 : (PUT)]
[2020-06-19 00:30:02:413522] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494203551), 실행시간 : (49ms)]
[2020-06-19 00:30:02:413533] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494203838), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/15), 실행시간 : (3ms)]
[2020-06-19 00:31:02:473217] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494263021), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (insertPortfolioByUser), 요청주소 : (/api/portfolio), HTTP요청메소드 : (POST), username : (test), title : (fdsa), summary : (fdsa), period : (fdsa), technology : (fdsa), github : (fdsa)]
[2020-06-19 00:31:02:473282] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494263021), 실행시간 : (65ms)]
[2020-06-19 00:31:02:473335] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494263509), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (8ms)]
[2020-06-19 00:31:02:473403] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494263996), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (6ms)]
[2020-06-19 00:31:29:500394] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:31:29:500394] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:31:31:501905] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.541 seconds (JVM running for 502.416)
[2020-06-19 00:32:16:547726] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:32:16:547726] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:32:18:549331] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.633 seconds (JVM running for 549.842)
[2020-06-19 00:32:22:553014] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:32:22:553015] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:32:23:554487] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.498 seconds (JVM running for 554.997)
[2020-06-19 00:32:26:557127] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:32:26:557127] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:32:27:558577] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.477 seconds (JVM running for 559.088)
[2020-06-19 00:32:46:577681] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:32:46:577682] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:32:48:579150] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.495 seconds (JVM running for 579.66)
[2020-06-19 00:32:51:581814] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:32:51:581815] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:32:52:583279] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.491 seconds (JVM running for 583.789)
[2020-06-19 00:33:16:606916] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:33:16:606916] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:33:17:608360] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.471 seconds (JVM running for 608.871)
[2020-06-19 00:33:22:613072] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:33:22:613073] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:33:23:614535] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.488 seconds (JVM running for 615.045)
[2020-06-19 00:34:13:664514] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:34:13:664515] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:34:15:665995] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.509 seconds (JVM running for 666.506)
[2020-06-19 00:34:23:673796] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:34:23:673796] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:34:24:675224] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.456 seconds (JVM running for 675.735)
[2020-06-19 00:34:34:685069] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:34:34:685069] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:34:35:686570] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.526 seconds (JVM running for 687.081)
[2020-06-19 00:35:36:746777] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:35:36:746777] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:35:37:748189] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.438 seconds (JVM running for 748.699)
[2020-06-19 00:35:47:758032] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:35:47:758033] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:35:48:759530] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.524 seconds (JVM running for 760.041)
[2020-06-19 00:35:57:768353] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:35:57:768353] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:35:59:769794] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.467 seconds (JVM running for 770.304)
[2020-06-19 00:36:22:793000] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:36:22:793001] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:36:23:794422] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.448 seconds (JVM running for 794.933)
[2020-06-19 00:36:34:805309] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:36:34:805310] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:36:36:806790] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.508 seconds (JVM running for 807.3)
[2020-06-19 00:36:39:810479] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:36:39:810479] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:36:41:811911] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.463 seconds (JVM running for 812.422)
[2020-06-19 00:36:44:815595] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:36:44:815595] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:36:46:817093] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.525 seconds (JVM running for 817.604)
[2020-06-19 00:36:51:821812] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:36:51:821813] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:36:52:823259] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.477 seconds (JVM running for 823.769)
[2020-06-19 00:37:02:833132] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:37:02:833133] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:37:03:834590] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.485 seconds (JVM running for 835.101)
[2020-06-19 00:37:07:838271] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:37:07:838272] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:37:08:839689] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.444 seconds (JVM running for 840.2)
[2020-06-19 00:37:12:843402] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:37:12:843403] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:37:14:844883] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.51 seconds (JVM running for 845.394)
[2020-06-19 00:37:18:849617] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:37:18:849618] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:37:20:851069] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.482 seconds (JVM running for 851.579)
[2020-06-19 00:37:25:855786] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:37:25:855786] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:37:26:857221] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.463 seconds (JVM running for 857.732)
[2020-06-19 00:37:31:861936] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:37:31:861936] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:37:32:863359] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.449 seconds (JVM running for 863.87)
[2020-06-19 00:37:41:872182] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:37:41:872182] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:37:42:873615] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.458 seconds (JVM running for 874.125)
[2020-06-19 00:38:52:943422] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494733201), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (insertPortfolioByUser), 요청주소 : (/api/portfolio), HTTP요청메소드 : (POST), username : (test), title : (fdsa), summary : (fdas), period : (fdsa), technology : (fdsa), github : (fdsa)]
[2020-06-19 00:38:52:943453] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494733201), 실행시간 : (31ms)]
[2020-06-19 00:38:52:943512] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494734077), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (6ms)]
[2020-06-19 00:38:52:943580] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494733252), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (8ms)]
[2020-06-19 00:39:05:956491] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494746301), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (deletePortfolioById), 요청주소 : (/api/portfolio/18), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:39:05:956516] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494746301), 실행시간 : (25ms)]
[2020-06-19 00:39:06:957143] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494747422), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (deletePortfolioById), 요청주소 : (/api/portfolio/19), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:39:06:957155] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494747422), 실행시간 : (12ms)]
[2020-06-19 00:39:07:958288] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494749082), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (2ms)]
[2020-06-19 00:39:07:958295] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494748414), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (2ms)]
[2020-06-19 00:39:07:958314] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494748625), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (2ms)]
[2020-06-19 00:39:14:964842] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494755572), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (updatePortfolioImageById), 요청주소 : (/api/portfolioimage/17), HTTP요청메소드 : (PUT), title : (portfolio2d), summary : (3번 포트폴리오 입니다.d), period : (2020.06.17d), technology : (#spring #reactd), github : (321fd)]
[2020-06-19 00:39:14:964860] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494755572), 실행시간 : (18ms)]
[2020-06-19 00:39:14:964870] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494755602), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (2ms)]
[2020-06-19 00:39:59:1010170] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:39:59:1010171] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:40:00:1011581] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.436 seconds (JVM running for 1012.091)
[2020-06-19 00:40:31:1042421] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832429), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (11ms)]
[2020-06-19 00:40:31:1042421] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832438), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (11ms)]
[2020-06-19 00:40:31:1042424] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832084), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (14ms)]
[2020-06-19 00:40:31:1042426] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832061), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (16ms)]
[2020-06-19 00:40:31:1042431] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494833153), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (2ms)]
[2020-06-19 00:40:31:1042451] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832880), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:31:1042460] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832532), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (1ms)]
[2020-06-19 00:40:31:1042461] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832528), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (1ms)]
[2020-06-19 00:40:31:1042462] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494831940), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (3ms)]
[2020-06-19 00:40:31:1042472] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832379), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (2ms)]
[2020-06-19 00:40:31:1042487] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832513), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:31:1042502] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832083), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:31:1042519] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494831978), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:31:1042619] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832155), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getCountLike), 요청주소 : (/api/countlike/7), 실행시간 : (5ms)]
[2020-06-19 00:40:31:1042628] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494832610), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikeByUser), 요청주소 : (/api/loadlike/7/test), 실행시간 : (2ms)]
[2020-06-19 00:40:44:1055013] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845220), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (2ms)]
[2020-06-19 00:40:44:1055013] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494846021), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (2ms)]
[2020-06-19 00:40:44:1055014] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494844963), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (3ms)]
[2020-06-19 00:40:44:1055017] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845575), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (6ms)]
[2020-06-19 00:40:44:1055020] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494844926), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 00:40:44:1055032] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845583), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:44:1055048] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494844331), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:44:1055062] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494844748), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (2ms)]
[2020-06-19 00:40:44:1055062] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845529), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (1ms)]
[2020-06-19 00:40:44:1055063] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845256), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (4ms)]
[2020-06-19 00:40:44:1055068] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845998), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:44:1055082] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845611), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:44:1055096] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845839), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:40:44:1055140] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845516), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getCountLike), 요청주소 : (/api/countlike/7), 실행시간 : (1ms)]
[2020-06-19 00:40:44:1055150] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494845847), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikeByUser), 요청주소 : (/api/loadlike/7/test), 실행시간 : (1ms)]
[2020-06-19 00:41:31:1102663] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:41:31:1102663] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:41:33:1104116] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.48 seconds (JVM running for 1104.626)
[2020-06-19 00:41:36:1106766] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896843), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (6ms)]
[2020-06-19 00:41:36:1106765] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896912), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (6ms)]
[2020-06-19 00:41:36:1106766] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896678), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (6ms)]
[2020-06-19 00:41:36:1106775] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494897737), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (14ms)]
[2020-06-19 00:41:36:1106776] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896364), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (7ms)]
[2020-06-19 00:41:36:1106791] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896634), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:41:36:1106800] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896983), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test), 실행시간 : (1ms)]
[2020-06-19 00:41:36:1106804] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494897512), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test), 실행시간 : (3ms)]
[2020-06-19 00:41:36:1106807] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896657), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test), 실행시간 : (2ms)]
[2020-06-19 00:41:36:1106811] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896611), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:41:36:1106823] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896840), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:41:36:1106836] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494897256), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (1ms)]
[2020-06-19 00:41:36:1106856] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494897220), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test), 실행시간 : (2ms)]
[2020-06-19 00:41:36:1106894] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494897073), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getCountLike), 요청주소 : (/api/countlike/7), 실행시간 : (3ms)]
[2020-06-19 00:41:36:1106903] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494896580), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikeByUser), 요청주소 : (/api/loadlike/7/test), 실행시간 : (1ms)]
[2020-06-19 00:41:39:1110187] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494900259), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (3ms)]
[2020-06-19 00:41:39:1110196] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494900551), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (1ms)]
[2020-06-19 00:41:39:1110203] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494900859), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (1ms)]
[2020-06-19 00:41:47:1117856] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494907876), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (updatePortfolioImageById), 요청주소 : (/api/portfolioimage/17), HTTP요청메소드 : (PUT), title : (portfolio2), summary : (3번 포트폴리오 입니다.), period : (2020.06.17), technology : (#spring #react), github : (321f)]
[2020-06-19 00:41:47:1117878] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494907876), 실행시간 : (22ms)]
[2020-06-19 00:41:47:1117886] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494908729), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (1ms)]
[2020-06-19 00:41:48:1119689] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494909105), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (2ms)]
[2020-06-19 00:42:00:1131416] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494922411), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (updatePortfolioImageById), 요청주소 : (/api/portfolioimage/17), HTTP요청메소드 : (PUT), title : (portfolio2 ), summary : (3번 포트폴리오 입니다. ), period : (2020.06.17 ), technology : (#spring #react ), github : (321)]
[2020-06-19 00:42:00:1131430] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494922411), 실행시간 : (14ms)]
[2020-06-19 00:42:00:1131439] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494922400), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioById), 요청주소 : (/api/portfolioid/17), 실행시간 : (2ms)]
[2020-06-19 00:42:11:1142720] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 00:42:11:1142720] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 00:42:13:1144147] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.453 seconds (JVM running for 1144.657)
[2020-06-19 00:42:23:1154345] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494944395), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test), 실행시간 : (63ms)]
[2020-06-19 00:42:23:1154345] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592494944033), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test), 실행시간 : (63ms)]
[2020-06-19 00:42:28:1159143] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592494950028), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:42:28:1159329] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 00:42:28:1159329] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592494950028), 실행시간 : (186ms)]
[2020-06-19 00:42:28:1159340] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 2
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 00:42:28:1159348] [ERROR] com.hansung.web.config.LogConfig --> USER_ERROR: [error_message : ({})]
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 2
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.controller.AuthController.logoutUser(AuthController.java:145)
	at com.hansung.web.controller.AuthController$$FastClassBySpringCGLIB$$49350591.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.hansung.web.config.LogConfig.userLogging(LogConfig.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.controller.AuthController$$EnhancerBySpringCGLIB$$db07c39b.logoutUser(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 00:52:03:1733842] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test2), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 00:52:03:1733855] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test2), 요청처리번호 : (1592495523726), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (1ms)]
[2020-06-19 00:52:05:1736088] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test2), 요청처리번호 : (1592495527165), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test2), 실행시간 : (1ms)]
[2020-06-19 00:52:05:1736089] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test2), 요청처리번호 : (1592495526056), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test2), 실행시간 : (2ms)]
[2020-06-19 00:52:10:1741092] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test2), 요청처리번호 : (1592495531114), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:52:10:1741178] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test2), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 00:52:10:1741178] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test2), 요청처리번호 : (1592495531114), 실행시간 : (86ms)]
[2020-06-19 00:52:16:1746976] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 00:52:43:1774589] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592495564910), 요청처리컨트롤러 : (AboutController), 요청처리메소드 : (getAboutByUser), 요청주소 : (/api/about/test2), 실행시간 : (4ms)]
[2020-06-19 00:52:43:1774589] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592495564884), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test2), 실행시간 : (3ms)]
[2020-06-19 00:52:43:1774589] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592495564901), 요청처리컨트롤러 : (PortfolioController), 요청처리메소드 : (getPortfolioByUser), 요청주소 : (/api/portfolio/test2), 실행시간 : (4ms)]
[2020-06-19 00:52:43:1774593] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592495564866), 요청처리컨트롤러 : (SkillController), 요청처리메소드 : (getSkillByUser), 요청주소 : (/api/skill/test2), 실행시간 : (3ms)]
[2020-06-19 00:52:43:1774595] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592495564623), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test2), 실행시간 : (2ms)]
[2020-06-19 00:52:43:1774599] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592495564074), 요청처리컨트롤러 : (InformationController), 요청처리메소드 : (getInformationByUser), 요청주소 : (/api/information/test2), 실행시간 : (2ms)]
[2020-06-19 00:52:47:1778270] [ERROR] c.h.w.s.JwtAuthenticationEntryPoint --> Responding with unauthorized error. Message - Full authentication is required to access this resource
[2020-06-19 00:52:47:1778270] [ERROR] c.h.w.s.JwtAuthenticationEntryPoint --> Responding with unauthorized error. Message - Full authentication is required to access this resource
[2020-06-19 00:52:56:1787427] [INFO ] com.hansung.web.config.LogConfig --> LOGOUT : [요청주소 : (/api/user/logout), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (logoutUser)]
[2020-06-19 00:53:05:1796392] [WARN ] com.hansung.web.config.LogConfig --> USER_WARN: [action: : (LOGIN), error_message : (Id and Password error)]
[2020-06-19 00:54:02:1853761] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 00:54:06:1857375] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 00:54:06:1857384] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495647362), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 00:54:10:1861422] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495652380), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test), 실행시간 : (0ms)]
[2020-06-19 00:54:10:1861424] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495651908), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test), 실행시간 : (3ms)]
[2020-06-19 00:54:15:1866422] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592495657137), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:54:15:1866508] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 00:54:15:1866508] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592495657137), 실행시간 : (86ms)]
[2020-06-19 00:56:06:1977614] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 00:56:10:1981742] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 00:56:10:1981752] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495771743), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 00:56:13:1984145] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495775050), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test), 실행시간 : (1ms)]
[2020-06-19 00:56:13:1984145] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495775140), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test), 실행시간 : (2ms)]
[2020-06-19 00:56:18:1989413] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592495780264), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:56:18:1989484] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 00:56:18:1989484] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592495780264), 실행시간 : (71ms)]
[2020-06-19 00:56:20:1991209] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592495780851), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:56:20:1991290] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 00:56:20:1991290] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592495780851), 실행시간 : (81ms)]
[2020-06-19 00:57:25:2056317] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 00:57:28:2059575] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 00:57:28:2059586] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495849307), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 00:57:31:2062243] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495852075), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test), 실행시간 : (2ms)]
[2020-06-19 00:57:31:2062243] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592495852745), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test), 실행시간 : (2ms)]
[2020-06-19 00:57:35:2066479] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592495856825), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 00:57:35:2066566] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 00:57:35:2066566] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592495856825), 실행시간 : (87ms)]
[2020-06-19 01:03:01:2392671] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:03:01:2392671] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:03:03:2394209] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.566 seconds (JVM running for 2394.72)
[2020-06-19 01:05:48:2558773] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:05:51:2562651] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:05:51:2562665] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496353007), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (1ms)]
[2020-06-19 01:05:54:2564825] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496354910), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test), 실행시간 : (2ms)]
[2020-06-19 01:05:54:2564836] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496355166), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test), 실행시간 : (11ms)]
[2020-06-19 01:05:58:2569214] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592496359415), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:05:58:2569287] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:05:58:2569287] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592496359415), 실행시간 : (73ms)]
[2020-06-19 01:06:00:2571428] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592496361343), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:06:00:2571514] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:06:00:2571514] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592496361343), 실행시간 : (86ms)]
[2020-06-19 01:06:07:2578417] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:06:07:2578490] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:06:12:2582779] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:06:12:2582851] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:08:18:2709071] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:08:18:2709071] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:08:19:2710491] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.443 seconds (JVM running for 2711.001)
[2020-06-19 01:09:08:2759728] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:09:08:2759735] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496549903), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (3ms)]
[2020-06-19 01:09:18:2769436] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:09:18:2769437] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496560223), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:09:46:2797420] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:09:46:2797421] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496587208), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:09:53:2804281] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:09:53:2804282] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496593887), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:10:20:2831754] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:10:20:2831755] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496621700), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:11:20:2891140] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:11:20:2891142] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496681002), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (1ms)]
[2020-06-19 01:11:23:2894519] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:11:27:2897977] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:11:30:2900800] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:11:30:2900897] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:11:34:2905600] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 11
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:11:35:2905766] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:11:35:2905776] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496696309), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:11:38:2909092] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496699478), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test), 실행시간 : (2ms)]
[2020-06-19 01:11:38:2909094] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496699302), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test), 실행시간 : (3ms)]
[2020-06-19 01:11:43:2914273] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592496703899), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:11:43:2914369] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:11:43:2914370] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592496703899), 실행시간 : (97ms)]
[2020-06-19 01:11:53:2924462] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 12
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:11:53:2924534] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:12:19:2950342] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:12:19:2950342] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:12:21:2951889] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.573 seconds (JVM running for 2952.4)
[2020-06-19 01:12:24:2955602] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 12
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:12:24:2955602] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 12
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:12:24:2955606] [ERROR] c.h.w.s.JwtAuthenticationEntryPoint --> Responding with unauthorized error. Message - Full authentication is required to access this resource
[2020-06-19 01:12:24:2955606] [ERROR] c.h.w.s.JwtAuthenticationEntryPoint --> Responding with unauthorized error. Message - Full authentication is required to access this resource
[2020-06-19 01:12:29:2959884] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 12
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:12:29:2959890] [ERROR] com.hansung.web.config.LogConfig --> USER_ERROR: [error_message : ({})]
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 12
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.controller.AuthController.logoutUser(AuthController.java:145)
	at com.hansung.web.controller.AuthController$$FastClassBySpringCGLIB$$49350591.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.hansung.web.config.LogConfig.userLogging(LogConfig.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.controller.AuthController$$EnhancerBySpringCGLIB$$db07c39b.logoutUser(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:12:34:2964823] [WARN ] com.hansung.web.config.LogConfig --> USER_WARN: [action: : (LOGIN), error_message : (Id and Password error)]
[2020-06-19 01:12:44:2975561] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:12:48:2979298] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:12:48:2979311] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496770211), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:12:51:2981857] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496771936), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/test), 실행시간 : (2ms)]
[2020-06-19 01:12:51:2981859] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test), 요청처리번호 : (1592496772197), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/test), 실행시간 : (4ms)]
[2020-06-19 01:12:55:2985868] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (test), 요청처리번호 : (1592496776833), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:12:55:2985949] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (test), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:12:55:2985950] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (test), 요청처리번호 : (1592496776833), 실행시간 : (82ms)]
[2020-06-19 01:13:12:3002807] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:13:12:3002807] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:13:13:3004277] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.495 seconds (JVM running for 3004.788)
[2020-06-19 01:13:53:3044085] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 13
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:13:53:3044092] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496834837), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (3ms)]
[2020-06-19 01:14:10:3061436] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 13
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:14:10:3061437] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592496851415), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:14:37:3088441] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 13
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:14:40:3091704] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 13
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:14:43:3094062] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 13
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:14:43:3094159] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:14:47:3098503] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 13
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:14:47:3098664] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:14:47:3098675] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592496889485), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:14:50:3100780] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592496891095), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/dlgkstjd), 실행시간 : (1ms)]
[2020-06-19 01:14:50:3100782] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592496890887), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/dlgkstjd), 실행시간 : (3ms)]
[2020-06-19 01:14:58:3109612] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592496899534), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:14:58:3109684] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:14:58:3109685] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592496899534), 실행시간 : (73ms)]
[2020-06-19 01:15:05:3116494] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592496906549), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:15:05:3116581] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:15:05:3116582] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592496906549), 실행시간 : (88ms)]
[2020-06-19 01:15:05:3116587] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 14
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:15:05:3116591] [ERROR] com.hansung.web.config.LogConfig --> USER_ERROR: [error_message : ({})]
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 14
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.controller.AuthController.logoutUser(AuthController.java:145)
	at com.hansung.web.controller.AuthController$$FastClassBySpringCGLIB$$49350591.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.hansung.web.config.LogConfig.userLogging(LogConfig.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.controller.AuthController$$EnhancerBySpringCGLIB$$db07c39b.logoutUser(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:113)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:47)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:16:59:3230752] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:16:59:3230752] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:17:01:3232234] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.508 seconds (JVM running for 3232.745)
[2020-06-19 01:17:13:3244559] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:17:17:3248301] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:17:17:3248315] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497037809), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:17:19:3250140] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497040513), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/dlgkstjd), 실행시간 : (2ms)]
[2020-06-19 01:17:19:3250142] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497040031), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/dlgkstjd), 실행시간 : (4ms)]
[2020-06-19 01:17:24:3254838] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497045136), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:17:24:3254921] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:17:24:3254922] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497045136), 실행시간 : (85ms)]
[2020-06-19 01:17:24:3254929] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 15
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:17:24:3254940] [INFO ] com.hansung.web.config.LogConfig --> LOGOUT : [요청주소 : (/api/user/logout), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (logoutUser)]
[2020-06-19 01:20:28:3439433] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:20:31:3442708] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:20:31:3442717] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497232305), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:20:34:3444807] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497234426), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/dlgkstjd), 실행시간 : (1ms)]
[2020-06-19 01:20:34:3444807] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497234929), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/dlgkstjd), 실행시간 : (1ms)]
[2020-06-19 01:20:38:3449695] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497240462), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:20:39:3449774] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:20:39:3449775] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497240462), 실행시간 : (80ms)]
[2020-06-19 01:22:25:3556216] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:22:25:3556216] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:22:26:3557721] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.532 seconds (JVM running for 3558.232)
[2020-06-19 01:22:36:3567186] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 16
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:22:36:3567194] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청처리번호 : (1592497357353), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (3ms)]
[2020-06-19 01:22:45:3576169] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 16
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:22:47:3578034] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 16
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:22:50:3580962] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 16
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:22:50:3581056] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:22:53:3584273] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 16
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:22:53:3584435] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:22:53:3584444] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497375192), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:22:58:3589181] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497379291), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/dlgkstjd), 실행시간 : (2ms)]
[2020-06-19 01:22:58:3589188] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497379303), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/dlgkstjd), 실행시간 : (8ms)]
[2020-06-19 01:23:02:3593539] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497384194), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:23:02:3593629] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:23:02:3593629] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497384194), 실행시간 : (90ms)]
[2020-06-19 01:23:02:3593635] [ERROR] c.h.w.s.JwtAuthenticationFilter --> Could not set user authentication in security context
org.springframework.security.core.userdetails.UsernameNotFoundException: User not found with id : 17
	at com.hansung.web.security.CustomUserDetailsService.lambda$1(CustomUserDetailsService.java:35)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at com.hansung.web.security.CustomUserDetailsService.loadUserById(CustomUserDetailsService.java:34)
	at com.hansung.web.security.CustomUserDetailsService$$FastClassBySpringCGLIB$$58dd2998.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:366)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.hansung.web.security.CustomUserDetailsService$$EnhancerBySpringCGLIB$$e5f8549c.loadUserById(<generated>)
	at com.hansung.web.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:38)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1594)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
[2020-06-19 01:23:02:3593644] [INFO ] com.hansung.web.config.LogConfig --> LOGOUT : [요청주소 : (/api/user/logout), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (logoutUser)]
[2020-06-19 01:24:04:3654850] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:24:04:3654850] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:24:05:3656332] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.509 seconds (JVM running for 3656.843)
[2020-06-19 01:27:42:3873413] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:27:49:3879844] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:27:49:3879857] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497670492), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:27:50:3881280] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497671474), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getUserProfile), 요청주소 : (/api/users/dlgkstjd), 실행시간 : (1ms)]
[2020-06-19 01:27:50:3881282] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497671070), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getLikesByUser), 요청주소 : (/api/loadlikes/dlgkstjd), 실행시간 : (3ms)]
[2020-06-19 01:27:54:3885672] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497676268), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser), 요청주소 : (/api/user/deleteuser), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:27:54:3885758] [INFO ] com.hansung.web.config.LogConfig --> DELETEUSER : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/deleteuser), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (deleteUser)]
[2020-06-19 01:27:54:3885758] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592497676268), 실행시간 : (86ms)]
[2020-06-19 01:37:34:4465401] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:37:34:4465401] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:37:36:4466956] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.582 seconds (JVM running for 4466.094)
[2020-06-19 01:37:42:4473756] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:37:42:4473756] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:37:44:4475196] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.468 seconds (JVM running for 4474.334)
[2020-06-19 01:38:24:4514825] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:38:24:4514825] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:38:25:4516332] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.533 seconds (JVM running for 4515.471)
[2020-06-19 01:38:49:4540555] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:38:49:4540555] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:38:51:4542032] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.503 seconds (JVM running for 4541.17)
[2020-06-19 01:38:55:4546759] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:38:55:4546759] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:38:57:4548202] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.469 seconds (JVM running for 4547.34)
[2020-06-19 01:39:12:4563189] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:39:12:4563189] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:39:13:4564633] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.47 seconds (JVM running for 4563.771)
[2020-06-19 01:39:26:4577558] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:39:26:4577558] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:39:28:4579016] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.482 seconds (JVM running for 4578.153)
[2020-06-19 01:39:59:4610284] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:39:59:4610284] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:40:01:4611789] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.531 seconds (JVM running for 4610.927)
[2020-06-19 01:40:21:4631925] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:40:21:4631925] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:40:22:4633378] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.477 seconds (JVM running for 4632.516)
[2020-06-19 01:40:35:4646314] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:40:35:4646315] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:40:37:4647883] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.596 seconds (JVM running for 4647.021)
[2020-06-19 01:41:21:4692662] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:41:21:4692663] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:41:23:4694158] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.523 seconds (JVM running for 4693.297)
[2020-06-19 01:41:45:4716357] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:41:45:4716357] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:41:47:4717852] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.519 seconds (JVM running for 4716.989)
[2020-06-19 01:41:59:4729780] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:41:59:4729781] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:42:00:4731328] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.577 seconds (JVM running for 4730.466)
[2020-06-19 01:42:09:4740160] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:42:09:4740161] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:42:10:4741716] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.582 seconds (JVM running for 4740.854)
[2020-06-19 01:42:20:4751580] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:42:20:4751580] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:42:22:4753137] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.583 seconds (JVM running for 4752.275)
[2020-06-19 01:44:21:4871828] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:44:21:4871828] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:44:22:4873325] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.521 seconds (JVM running for 4872.463)
[2020-06-19 01:47:02:5033055] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:47:02:5033056] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:47:03:5034486] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.456 seconds (JVM running for 5033.624)
[2020-06-19 01:47:30:5060773] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:47:30:5060774] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:47:31:5062286] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.54 seconds (JVM running for 5061.424)
[2020-06-19 01:47:57:5088568] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 2940 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:47:57:5088568] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:47:59:5090053] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.509 seconds (JVM running for 5089.19)
[2020-06-19 01:48:34:5124995] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (test1), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:48:34:5125010] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (test1), 요청처리번호 : (1592498915326), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (2ms)]
[2020-06-19 01:48:41:5132436] [INFO ] com.hansung.web.config.LogConfig --> LOGOUT : [요청유저명 : (test1), 요청주소 : (/api/user/logout), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (logoutUser)]
[2020-06-19 01:48:49:5140002] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (admin), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:48:49:5140011] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (admin), 요청처리번호 : (1592498929592), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
[2020-06-19 01:48:55:5145869] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (admin), 요청처리번호 : (1592498935849), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (getAllPortfolio), 요청주소 : (/api/allportfolio), 실행시간 : (15ms)]
[2020-06-19 01:48:57:5148342] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (admin), 요청처리번호 : (1592498938310), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (deleteAllPortfolioByUser), 요청주소 : (/api/deleteall/test1), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:48:57:5148370] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (admin), 요청처리번호 : (1592498938310), 실행시간 : (28ms)]
[2020-06-19 01:49:21:5172088] [INFO ] com.hansung.web.config.LogConfig --> REQUEST : [요청유저명 : (admin), 요청처리번호 : (1592498962486), 요청처리컨트롤러 : (PortfolioPublicController), 요청처리메소드 : (deleteAllPortfolioByUser), 요청주소 : (/api/deleteall/admin), HTTP요청메소드 : (DELETE)]
[2020-06-19 01:49:21:5172098] [INFO ] com.hansung.web.config.LogConfig --> RESPONSE : [요청유저명 : (admin), 요청처리번호 : (1592498962486), 실행시간 : (10ms)]
[2020-06-19 01:50:39:413] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 16088 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:50:39:414] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:50:43:4378] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 4.219 seconds (JVM running for 4.894)
[2020-06-19 01:51:35:56078] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 16088 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:51:35:56079] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:51:55:76587] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 16088 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:51:55:76587] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:51:58:79099] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 16088 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:51:58:79099] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:52:00:81054] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.99 seconds (JVM running for 81.57)
[2020-06-19 01:52:17:98508] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 16088 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:52:17:98508] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:52:19:100118] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 1.665 seconds (JVM running for 100.635)
[2020-06-19 01:56:05:422] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 20484 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:56:05:423] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:56:09:4371] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 4.213 seconds (JVM running for 4.878)
[2020-06-19 01:56:53:429] [INFO ] com.hansung.web.DemoApplication --> Starting DemoApplication on DESKTOP-D1J53EB with PID 24060 (C:\Dev\springDev\portfolio_backend\target\classes started by admin in C:\Dev\springDev\portfolio_backend)
[2020-06-19 01:56:53:431] [INFO ] com.hansung.web.DemoApplication --> No active profile set, falling back to default profiles: default
[2020-06-19 01:56:56:4346] [INFO ] com.hansung.web.DemoApplication --> Started DemoApplication in 4.177 seconds (JVM running for 4.847)
[2020-06-19 01:57:21:28558] [INFO ] com.hansung.web.config.LogConfig --> LOGOUT : [요청유저명 : (admin), 요청주소 : (/api/user/logout), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (logoutUser)]
[2020-06-19 01:57:36:43735] [INFO ] com.hansung.web.config.LogConfig --> REGISTER : [요청주소 : (/api/user/register), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (registerUser)]
[2020-06-19 01:57:40:47642] [INFO ] com.hansung.web.config.LogConfig --> LOGIN : [요청유저명 : (dlgkstjd), 요청주소 : (/api/user/login), 요청처리컨트롤러 : (AuthController), 요청처리메소드 : (loginUser)]
[2020-06-19 01:57:40:47659] [INFO ] com.hansung.web.config.LogConfig --> GET_SUCCESS : [요청유저명 : (dlgkstjd), 요청처리번호 : (1592499461360), 요청처리컨트롤러 : (UserController), 요청처리메소드 : (getCurrentUser), 요청주소 : (/api/user/me), 실행시간 : (0ms)]
